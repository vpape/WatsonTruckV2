@model WatsonTruckV2.Models.SpouseAndDependentInsVM
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <title>Spouse Detail</title>
</head>
<body>
    <div class="form-horizontal">
        <hr />
        <input type="hidden" id="Employee_id" class="form-control" name="Employee_id" value=@ViewBag.Employee_id />
        <input type="hidden" id="FamilyMember_id" class="form-control" name="FamilyMember_id" value=@ViewBag.FamilyMember_id />
        <input type="hidden" id="MaritalStatus" class="form-control" name="MaritalStatus" value=@ViewBag.MaritalStatus />
        <div class="collapsible" id="SpDetail">Spouse Detail</div>
        <div class="content">
            <p></p>
            <p></p>
            <dl class="dl-horizontal">
                <dt>
                    <label class="col-md-2 control-label">SSN:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="SSN" class="form-control" name="SSN" value="@Html.Raw(Model.family.SSN)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Marital Status:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="SSN" class="form-control" name="SSN" value="@Html.Raw(Model.family.MaritalStatus)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">First Name:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="FirstName" class="form-control" name="FirstName" value="@Html.Raw(Model.family.FirstName)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Last Name:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="LastName" class="form-control" name="LastName" value="@Html.Raw(Model.family.LastName)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Date of Birth:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="date" id="DateOfBirth" class="form-control" name="DateOfBirth" value="@Convert.ToDateTime(Model.family.DateOfBirth).ToString("yyyy-MM-dd")" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Gender:</label>
                </dt>
                <dd class="col-md-10 form-group" id="Gender">
                    <input type="text" id="Gender" class="form-control" name="Gender" value="@Html.Raw(Model.family.Gender)" disabled>
                    @*<input type="checkbox" class="checkbox-inline" id="Male" name="Gender" value="Male" @((Model.family.Gender) == "Male" ? "checked" : "") disabled /><text>Male</text>*@
                    @*<input type="checkbox" class="checkbox-inline" id="Female" name="Gender" value="Female" @((Model.family.Gender) == "Female" ? "checked" : "") disabled /><text>Female</text>*@
                    @*@Html.RadioButtonFor(model => model.family.Gender, "Male", true) Male @Html.RadioButtonFor(model => model.family.Gender, "female", false) Female*@
                    @*<label class="radio-inline"><input disabled type="radio" id="Male" class="radio-inline" name="Gender" value="@((Model.family.Gender == "Male" ? "selected" : ""))" />Male</label>*@
                    @*<label class="radio-inline"><input disabled type="radio" id="Female" class="radio-inline" name="Gender" value="@((Model.family.Gender == "Female" ? "selected" : ""))" />Female</label>*@
                </dd>
                <dt>
                    <label class="col-md-2 control-label">MailingAddress:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="MailingAddress" class="form-control" name="MailingAddress" value="@Html.Raw(Model.family.MailingAddress)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">P.O. box:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="PObox" class="form-control" name="PObox" value="@Html.Raw(Model.family.PObox)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">City:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="City" class="form-control" name="City" value="@Html.Raw(Model.family.City)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">State:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="State" class="form-control" name="State" value="@Html.Raw(Model.family.State)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Zip Code:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="ZipCode" class="form-control" name="ZipCode" value="@Html.Raw(Model.family.ZipCode)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">County:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="County" class="form-control" name="County" value="@Html.Raw(Model.family.County)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Physical Address:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="PhysicalAddress" class="form-control" name="PhysicalAddress" value="@Html.Raw(Model.family.PhysicalAddress)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">City:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="City2" class="form-control" name="CityTwo" value="@Html.Raw(Model.family.CityTwo)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">State:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="State2" class="form-control" name="StateTwo" value="@Html.Raw(Model.family.StateTwo)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">ZipCode:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="ZipCode2" class="form-control" name="ZipCodeTwo" value="@Html.Raw(Model.family.ZipCodeTwo)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Email:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="EmailAddress" class="form-control" name="EmailAddress" value="@Html.Raw(Model.family.EmailAddress)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Phone Number:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="tel" id="PhoneNumber" class="form-control" name="PhoneNumber" value="@Html.Raw(Model.family.PhoneNumber)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Cell Phone:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="tel" id="CellPhone" class="form-control" name="CellPhone" value="@Html.Raw(Model.family.CellPhone)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Current Employer:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="tel" id="Employer" class="form-control" name="Employer" value="@Html.Raw(Model.family.Employer)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Employer Address:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="EmployerMailingAddress" class="form-control" name="EmployerMailingAddress" value="@Html.Raw(Model.family.EmployerMailingAddress)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">P.O. box:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="EmployerPObox" class="form-control" name="EmployerPObox" value="@Html.Raw(Model.family.EmployerPObox)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">City:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="EmployerCity" class="form-control" name="EmployerCity" value="@Html.Raw(Model.family.EmployerCity)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">State:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="EmployerState" class="form-control" name="EmployerState" value="@Html.Raw(Model.family.EmployerState)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Zip Code:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="EmployerZipCode" class="form-control" name="EmployerZipCode" value="@Html.Raw(Model.family.EmployerZipCode)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Phone Number:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="EmployerPhoneNumber" class="form-control" name="EmployerPhoneNumber" value="@Html.Raw(Model.family.EmployerPhoneNumber)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Other Insurance:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    @*@Html.RadioButtonFor(model => model.Gender, "Male", true) Male @Html.RadioButtonFor(model => model.Gender, "female", false) Female*@
                    <input type="text" id="spOtherInsCoverage" class="form-control" name="CoveredByOtherInsurance" value="@Html.Raw(Model.otherIns.CoveredByOtherInsurance)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Insurance Carrier:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="text" id="spInsCarrier" class="form-control" name="InsuranceCarrier" value="@Html.Raw(Model.otherIns.InsuranceCarrier)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Policy Number:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="tel" id="spInsPolicyNumber" class="form-control" name="PolicyNumber" value="@Html.Raw(Model.otherIns.PolicyNumber)" disabled>
                </dd>
                <dt>
                    <label class="col-md-2 control-label">Phone Number:</label>
                </dt>
                <dd class="col-md-10 form-group">
                    <input type="tel" id="spInsPhoneNumber" class="form-control" name="PhoneNumber" value="@Html.Raw(Model.otherIns.PhoneNumber)" disabled>
                </dd>
                <dt>
                    @Html.ActionLink("Edit", "EditSpouse", new { FamilyMember_id = ViewBag.FamilyMember_id }, null)|
                    @Html.ActionLink("Back to List", "FamilyOverview", new { Employee_id = ViewBag.Employee_id }, null)
                </dt>
            </dl>
        </div>
    </div>
</body>
</html>

<style>
    .collapsible {
        background-color: #2e4593;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: center;
        outline: none;
        font-size: 15px;
    }

        .active, .collapsible:hover {
            background-color: #2e4593;
        }

    .content {
        padding: 0 18px;
        display: none;
        overflow: hidden;
        background-color: #f1f1f1;
    }

    .button {
        text-align: right;
    }

    .btn:hover {
        background-color: #2e4593;
        color: white;
    }

    a {
        text-decoration: none;
        display: inline-flex;
        padding: 8px 8px;
    }

        a:hover {
            background-color: #ddd;
            color: black;
        }
</style>

<script>
    var col = document.querySelectorAll(".collapsible");
    var i;
    var Employee_id;

    for (i = 0; i < col.length; i++) {
        col[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }

        });
    }

    //document.addEventListener("DOMContentLoaded", function () {
    //    Employee_id = document.getElementById("Employee_id").value;
    //    SSN = document.getElementById("SSN").value;
    //    FirstName = document.getElementById("FirstName").value;
    //    LastName = document.getElementById("LastName").value;
    //    DateOfBirth = document.getElementById("DateOfBirth").value;
    //    Gender = document.getElementsByName("Gender").value;

    //    MailingAddress = document.getElementById("MailingAddress").value;
    //    PObox = document.getElementById("PObox").value;
    //    City = document.getElementById("City").value;
    //    State = document.getElementById("State").value;
    //    ZipCode = document.getElementById("ZipCode").value;
    //    County = document.getElementById("County").value;
    //    PhysicalAddress = document.getElementById("PhysicalAddress").value
    //    City2 = document.getElementById("City2").value
    //    State2 = document.getElementById("State2").value
    //    ZipCode2 = document.getElementById("ZipCode2").value
    //    EmailAddress = document.getElementById("EmailAddress").value;
    //    PhoneNumber = document.getElementById("PhoneNumber").value;
    //    CellPhone = document.getElementById("CellPhone").value;

    //    Employer = document.getElementById("Employer").value;
    //    EmployerMailingAddress = document.getElementById("EmployerMailingAddress").value;
    //    EmployerPObox = document.getElementById("EmployerPObox").value;
    //    EmployerCity = document.getElementById("EmployerCity").value;
    //    EmployerState = document.getElementById("EmployerState").value;
    //    EmployerZipCode = document.getElementById("EmployerZipCode").value;
    //    EmployerPhoneNumber = document.getElementById("EmployerPhoneNumber").value;


    //    spOtherInsCoverage = document.getElementById("spOtherInsCoverage").value
    //    spInsuranceCarrier = document.getElementById("spInsCarrier").value
    //    spInsPolicyNumber = document.getElementById("spInsPolicyNumber").value
    //    spInsPhoneNumber = document.getElementById("spInsPhoneNumber").value

    //    var data = {
    //        "Employee_id": Employee_id,
    //        "SSN": SSN,
    //        "FirstName": FirstName,
    //        "DateOfBirth": DateOfBirth,
    //        "Gender": Gender,

    //        "MailingAddress": MailingAddress,
    //        "PObox": PObox,
    //        "City": City,
    //        "State": State,
    //        "ZipCode": ZipCode,
    //        "County": County,
    //        "PhysicalAddress": PhysicalAddress,
    //        "City2": City2,
    //        "State2": State2,
    //        "ZipCode2": ZipCode2,
    //        "EmailAddress": EmailAddress,
    //        "PhoneNumber": PhoneNumber,
    //        "CellPhone": CellPhone,

    //        "Employer": Employer,
    //        "EmployerMailingAddress": EmployerMailingAddress,
    //        "EmployerPObox": EmployerPObox,
    //        "EmployerCity": EmployerCity,
    //        "EmployerState": EmployerState,
    //        "EmployerZipCode": EmployerZipCode,
    //        "EmployerPhoneNumber": EmployerPhoneNumber,

    //        "spOtherInsCoverage": spOtherInsCoverage,
    //        "spInsCarrier": spInsCarrier,
    //        "spInsPolicyNumber": spInsPolicyNumber,
    //        "spInsPhoneNumber": spInsPhoneNumber,

    //    }

    //    //var ret = postData('GetSpDetail', data)
    //    //    .then(data => FirstStep(data))
    //    //    .catch(error => console.error(error))

    //    fetch('GetSpDetail', {
    //        body: JSON.stringify(data), //must match 'Content-Type' header
    //        cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
    //        credentials: 'same-origin', //include, same-origin, *omit
    //        headers: {
    //            'Accept': 'application/json',
    //            'user-agent': 'Mozilla/4.0 MDN Example',
    //            'content-type': 'application/json'
    //        },
    //        method: 'Post', //*GET, POST, PUT, DELETE, etc...
    //        mode: 'same-origin', //no-cors, cors, *same-origin
    //        redirect: 'follow', //manual, *follow, error
    //        referrer: 'no-referrer', //*client, no-referrer
    //    }).then(res => res.json())
    //        .then(response => FirstStep(response))
    //        .catch(error => console.error('Error:', error));
    //})

    function FirstStep(emp) {
        document.querySelector("#SpDetail").nextElementSibling.style.display = "none";
        Employee_id = emp.data;

    }

    function postData(url, data) {
        //Default options are marked with *
        console.log(data);
        console.log(JSON.stringify(data));
        return fetch(url, {
            body: JSON.stringify(data), //must match 'Content-Type' header
            cache: 'no-cache', //*default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', //include, same-origin, *omit
            headers: {
                'Accept': 'application/json',
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'Get', //*GET, POST, PUT, DELETE, etc...
            mode: 'same-origin', //no-cors, cors, *same-origin
            redirect: 'follow', //manual, *follow, error
            referrer: 'no-referrer', //*client, no-referrer
        }).then(res => res.json())
            .then(response => console.log('Success:', JSON.stringify(response)))
            .catch(error => console.error('Error:', error));
        //.then(Response => {
        //    console.log(Response);
        //    Response.json();
        //}) //parses response to JSON
    }
</script>

